{"version":3,"sources":["components/Coin/Coin.jsx","components/CoinList/CoinList.jsx","components/AccountBalance/AccountBalance.jsx","components/ExchangeHeader/logo.svg","components/ExchangeHeader/ExchangeHeader.jsx","App.js","reportWebVitals.js","index.js"],"names":["Td","styled","td","Coin","props","name","ticker","price","showBalance","balance","action","method","onClick","event","preventDefault","handleRefresh","tickerId","Table","table","CoinList","coinData","map","key","Section","section","AccountBalance","buttonText","content","amount","handleBalanceVisibilityChange","Img","img","Header","header","H1","h1","ExchangeHeader","src","logo","alt","Component","Div","div","formatPrice","parseFloat","Number","toFixed","App","useState","setShowBalance","setCoinData","componentDidMount","a","axios","get","response","coinIds","data","slice","coin","id","promises","Promise","all","coinPriceData","symbol","quotes","USD","useEffect","length","valueChangeId","tickerUrl","newPrice","newCoinData","values","newValues","className","oldValue","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.533ce9d1.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\n\nconst Td = styled.td`\n    border: 1px solid #cccccc;\n    width: 25vh;\n`;\n\nexport default function Coin(props)  {\n  \n   const handleClick = (event) => {\n        // Prevent the default action of submitting the form\n        event.preventDefault();\n\n        props.handleRefresh(props.tickerId);\n   }\n   \n    return (\n        <tr>\n        <Td>{props.name}</Td>\n        <Td>{props.ticker}</Td>\n        <Td>${props.price}</Td>\n        {props.showBalance ? <Td>{props.balance}</Td> : null}\n        <Td>\n            <form action=\"#\" method=\"POST\">\n            <button onClick={handleClick}>Refresh</button>\n            </form>         \n        </Td>\n        </tr>\n    );\n\n }\n\n Coin.propTypes = {\n     name: PropTypes.string.isRequired,\n     ticker: PropTypes.string.isRequired,\n     price: PropTypes.number.isRequired\n }\n\n\n","import React from 'react';\nimport Coin from \"../Coin/Coin\";\nimport styled from \"styled-components\";\n\nconst Table = styled.table`\n    margin: 50px auto 50px auto;\n    display: inline-block;\n    font-size: 1.4rem;\n`;\n\nexport default function CoinList(props) {\n    return (\n    <Table>\n    <thead>\n        <tr>\n            <th>Name</th>\n            <th>Ticker</th>\n            <th>Price</th>\n            {props.showBalance ? <th>Balance</th> : null}\n            <th>Actions</th>\n        </tr>\n    </thead>\n    <tbody>\n        {\n        props.coinData.map( ({key, name, ticker, price, balance}) => \n        <Coin key={key}\n                handleRefresh={props.handleRefresh}\n                name={name} \n                ticker={ticker}\n                showBalance={props.showBalance}\n                balance={balance} \n                price={price}\n                tickerId={key}/>\n        )\n        }\n        \n            \n    </tbody>\n    </Table>\n    )\n\n}\n","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Section = styled.section`\n    font-size: 2rem;\n    text-align: left;\n    padding: 1.5rem 0 1.5rem 5rem;\n`;\n\nexport default function AccountBalance(props) {\n    const buttonText = props.showBalance ? \"Hide Balance\" : \"Show Balance\";\n    let content = null;\n    if (props.showBalance) {\n        content = <>Balance: ${props.amount}</>\n    }\n    return (\n        <Section>\n            {content}   \n            <button onClick={props.handleBalanceVisibilityChange}>{buttonText}</button>\n        </Section>\n    );\n    \n}\n\n\n\n\nAccountBalance.propTypes = {\n    amount: PropTypes.number.isRequired\n}","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport styled from \"styled-components\";\n\nconst Img = styled.img`\n    height: 8rem;\n    pointer-events: none;\n`;\n\nconst Header = styled.header`\n    background-color: #282c34;\n    min-height: 20vh;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: flex-start;\n    color: white;\n`;\n \nconst H1 = styled.h1`\n    font-size: 4rem;\n`;\n\nexport default class ExchangeHeader extends Component {\n    render() {\n        return (\n            <Header>\n                <Img src={logo} alt=\"React logo\"/>\n                <H1>\n                Coin Exchange \n                </H1>\n          </Header>\n        )\n    }\n}\n","import React, {useState, useEffect} from \"react\";\nimport CoinList from \"./components/CoinList/CoinList\";\nimport AccountBalance from \"./components/AccountBalance/AccountBalance\";\nimport ExchangeHeader from \"./components/ExchangeHeader/ExchangeHeader\";\nimport styled from \"styled-components\";\nimport axios from \"axios\";\n\nconst Div = styled.div`\n  text-align: center;\n  background-color: rgb(20, 56, 97);\n  color: #cccccc\n`;\n\nconst COIN_COUNT = 10;\nconst formatPrice = price => parseFloat(Number(price).toFixed(4));\n\nfunction App(props) {\n  const [balance, setBalance] = useState(10000);\n  const [showBalance, setShowBalance] = useState(true);\n  const [coinData, setCoinData] = useState([]);\n\n  const componentDidMount = async() => {\n    const response = await axios.get(\"https://api.coinpaprika.com/v1/coins\");\n    const coinIds = response.data.slice(0, COIN_COUNT).map(coin => coin.id);\n    const tickerUrl = \"https://api.coinpaprika.com/v1/tickers/\";\n    const promises = coinIds.map(id => axios.get(tickerUrl + id));\n    const coinData = await Promise.all(promises);\n    const coinPriceData = coinData.map(function(response) {\n      const coin = response.data;\n      return {\n        key: coin.id,\n        name: coin.name,\n        ticker: coin.symbol,\n        balance: 0,\n        price: formatPrice(coin.quotes.USD.price),\n      };\n    });\n    setCoinData(coinPriceData);\n  }\n\n\n  useEffect(function() {\n    if (coinData.length === 0) {\n      componentDidMount();\n    }\n  });\n\n  const handleBalanceVisibilityChange = () => {\n    setShowBalance(oldValue => !oldValue);\n  }\n\n  const handleRefresh = async (valueChangeId) => {\n    const tickerUrl = `https://api.coinpaprika.com/v1/tickers/${valueChangeId}`;\n    const response = await axios.get(tickerUrl);\n    debugger;\n    const newPrice = formatPrice(response.data.quotes.USD.price);\n    const newCoinData = coinData.map(function(values) {\n      let newValues = {...values};\n      if (valueChangeId === values.key) {\n        newValues.price = newPrice;\n      }\n      return newValues;\n    });\n\n    setCoinData(newCoinData);\n  }\n\n  return (\n    <Div className=\"App\">\n      <ExchangeHeader />\n      <AccountBalance \n        amount={balance} \n        showBalance={showBalance} \n        handleBalanceVisibilityChange={handleBalanceVisibilityChange}/>\n      <CoinList \n        coinData={coinData} \n        showBalance={showBalance}\n        handleRefresh={handleRefresh} />\n    </Div>\n  );\n\n  \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}